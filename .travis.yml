# For details on this setup see https://github.com/hvr/multi-ghc-travis

env:
  - GHCVER=7.6.3
  - GHCVER=7.8.2
  - GHCVER=head

matrix:
  allow_failures:
    - env: GHCVER=head

before_install:
  - travis_retry sudo add-apt-repository -y ppa:hvr/ghc
  - travis_retry sudo apt-get update
  - travis_retry sudo apt-get install cabal-install-1.20 ghc-$GHCVER
  - export PATH=/opt/ghc/$GHCVER/bin:/opt/cabal/1.20/bin:$PATH
  # Alex & Happy
  - |
    if [ $GHCVER = "head" ] || [ ${GHCVER%.*} = "7.8" ]; then
      travis_retry sudo apt-get install happy-1.19.3 alex-3.1.3
      export PATH=/opt/alex/3.1.3/bin:/opt/happy/1.19.3/bin:$PATH
    else
      travis_retry sudo apt-get install happy alex
    fi
    
install:
  - cabal update
  - cabal sandbox init
  - cabal install --only-dependencies --enable-tests --enable-benchmarks

# Here starts the actual work to be performed for the package under test; 
# any command which exits with a non-zero exit code causes the build to fail.
script:
  # "-v2" provides useful information for debugging
  - cabal configure --enable-tests --enable-benchmarks -v2
  - cabal build
  # "--show-details=streaming" is a workaround for 
  # https://github.com/haskell/cabal/issues/1810:
  - cabal test --show-details=streaming
  - cabal sdist
  # The following scriptlet checks that the resulting source distribution can be built & installed
  - |
    export SRC_TGZ=$(cabal info . | awk '{print $2 ".tar.gz";exit}') ;
    cd dist/;
    if [ -f "$SRC_TGZ" ]; then
       cabal install "$SRC_TGZ";
    else
       echo "expected '$SRC_TGZ' not found";
       exit 1;
    fi
